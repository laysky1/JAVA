package days01;
// 주석문 - 슬러시 두개로 시작되는 내용은 컴파일러가 번역하지 않고 실행되지도 않는 설명구분으로 인식합니다

// 현재팡리에서 쓰여진 거의 모든 단어들은 프로그램 실행에 관여하는 예약어(실행명령 등) 입니다
// 다만 '//'  로 시작하거나,  '/*  */' 사이에 있는 구문들은 실행되지 않고, 개발자 및 다른 사람의
// 이해를 돕기위한 설명문으로 사용되며,   '주석문'이라고 부릅니다
// 컴파일러는 주석ans을 제외한 다른 명령어들만 컴파일 & 실행합니다

// 한줄 주석은 슬래시 두개로 시작합니다
// 여러줄 주석은 /* 로 시작해서   */ 로 끝납니다
/*
ABCD
EFG
*/

// 여기서부터가 자바 프로그램의 시작입니다.   위쪽에 package 는 현재 프로그램이 속해있는 폴더의 표시일뿐입니다.
public class JavaFirst {    // public class 클래스이름 {   }  중괄호로 시작해서 중괄호로 끝납니다
	// 자바 프로그램은 이와 같은 클래스 단위로 구성됩니다.
	
	// 하나의 파일안에는 다수개의 클래스가 중괄호를 경계로 해서 만들어질수 있습니다.
	// 다만 파일이 실행되면 파일안의 클래스중에 public static void main(String[] args) 가 있는 클래스가 주가되어 실행됩니다
	public static void main(String[] args) {  // JavaFirst 프로그램의 실행의 시작
		
		System.out.printf("겁나 쉬운 자바 프로그래밍\n");
		// 괄호안의 큰따옴표로 둘러 싸인 텍스트를 화면에 출력하는 명령입니다.
		// 자바의 명령은 하나의 명령이 끝날때마다 반드시 ';'세미콜론을 표시하여 문장의 끝을 표시하여야 합니다
		// 세미콜론으로 구분한다면 한줄에 여러명령을 쓰셔도 됩니다. 다만 가독성을 위해서 한줄에 한개의 명령을 쓰는것을 권장합니다
		System.out.printf("겁나 쉬운 자바 프로그래밍");
		System.out.printf("\n겁나 쉬운 자바 프로그래밍\n");
		// 자바컴파일러는 절대로 언급되지 않은 추가적인 동작을 하지 않스빈다 (예:줄바꿈)
		// 별도의 표시없이 System.out.printf 명령을 사용하면, 두개이건 세개이건 모두 한줄에 출력하려고합니다
		// 여기서 중요한 줄바꿈의 별고의표시 : \n      \:백슬래시   /:슬래시 
		
	} // JavaFirst 프로그램의 실행의 끝
	
}


// 클래스의 이름 생성 규칙
// 첫글자는 반드시 대문자이어야 합니다. 
// 여러 단어가 조합된 이름이라면 두번째 단어의 시작 문자도 대문자로 표기합니다(카멜 표기법)
// JavaFirst  , SecondProgram,  Java_First
// 하나의 Java 파일에는 여러개의 클래스가 정의될수 있고, 그중 하나는 반드시 public 을 앞에 붙여서
// 현재파일의 메인 클래스임을 표시합니다
// 메인이 되는 클래스에  public static void main(String[] args){} 을 포함시킵니다.
//클래스의 이름은 영문과 숫자가 조합되어서 만들수 있지만 역시 첫글자는 영문이어야 합니다
//이름 중간에 공백 또는 특수기호를 쓸수 없습니다.
//사용가능한 특수기호로는 언더바(_) 하나 정도만 사용합니다.
