package days07;

public class Array01 {

	public static void main(String[] args) {
		
		// 배열
		//  동일한 변수이름에 번호(첨자)를 붙여서 다수개의 데이터를 한번에 저장할 수 있는 방법
		// 1. 다수개의 변수를 같은 이름으로 손쉽게 선언하여 사용가능
		// 2. 하나의 이름으로 다수개의 변수들을 제어할 수 있음
		/*
		int kor1, eng1, mat1, kor2, eng2, mat2, tot1, tot2, kor3, eng3, mat3, tot3;
		double avg1, avg2, avg3;
		
		일반 변수와 배열 변수 생성의 비교
		int[]kor=new Int[3];
		int[]eng=new Int[3];
		int[]mat=new Int[3];
		int[]tot=new Int[3];
		int[]avg=new double[3];
		*/
		
		//배열의 생성방법
		//자료형[] 배열변수명;
		int[]a; //참조변수(레퍼런스 변수)생성 - 배열의 이름이 되는 변수를 생성.
		// 참조변수는 메모리(주기억장치:RAM)내부의 공간 중 HEAP이라는 영역안에 실제데이터가
		// 저장되고 지정하고 그곳의 위치정보를 저장하는 변수입니다.
		
		// 참조값 = 레퍼런스값 = 주소값 = 어드레스 값
		// 참조변수(레퍼런스변수)는 위 네개의 이름이 지칭하는 그 하나의 값을 저장하는 변수
		// a=123;
		//에러 a변수는 정수를 저장하는 변수가 아니고, 정수가 지정되는 곳의 주소를 저장하는 변수이기때문에
		//에러입니다. 123번지를 임의로 개발자가 사용하는 건 위험한 행동입니다.
		
		//현재는 배열에 정수를 몇개 저장할 수 있는지 갯수와 메모리가 정해지지 않았습니다.
		//배열을 사용하기 전에 저장할 수 있는 갯수와 Heap에 만들어진 공간 주소를 반드시 저장하고 사용합니다.
		a=new int[3]; //할당된 메모리 주소 저장
		int[]b =new int[3];//참조변수와 메모리 할당 명령을 합쳐서 한줄에 쓰기도 합니다.
		//new int[3] :Heap영역에 정수가 3개 저장될 공간을 "새롭게" 확보하라는 명령입니다.
		//					new가 새 메모리를 확보한 후 그 시작 주소를 왼쪽 변수에 전달-저장되게 해줍니다.
		// 새로운 메모지는 int(4byte)세개가 저장되어야 하므로 총 12byte가 확보됩니다.
		
		
		//배열의 각 공간에 값을 대입하는 방법
		//인덱스(첨자) 연산을 사용
		//배열의 인덱스(첨자) : 시작은 0, 종료는 배열의 크기 - 1
		//배열변수명[인덱스(첨자)]=값;
		a[0]=10; //배열의 1번째 요소에 값을 대입
		a[1]=20;//배열의 2번째 요소에 값을 대입
		a[2]=30;//배열의 3번째 요소에 값을 대입
		
		int i = 1;
		int a1, a2, a3;
		// ai = 10; //X 에러 고유명사로 된 변수의 이름은 숫자라고 하더라도 아라비아 기호이므로 다른변수로
		//대체되어 이름을 사용할 수 없습니다.
		
		i=0;
		b[i]=10; //배열은 첨자(인덱스)가 정수이므로 정수값을 저장한 변수로 대체되어 사용이 가능합니다.
		i=1;
		b[i]=50;
		b[i+1]=80;
		
		a[0]=1;
		b[a[0]]=20;
		
		System.out.printf("a[0] =%d\n",a[0]);
		System.out.printf("a[1] =%d\n",a[1]);
		System.out.printf("a[2] =%d\n",a[2]);
		System.out.printf("b[0] =%d\n",b[0]);
		System.out.printf("b[1] =%d\n",b[1]);
		System.out.printf("b[2] =%d\n",b[2]);
		
		
	}

}
