package days02;

public class Print01 {

	public static void main(String[] args) {
		//printf는 출력하고자 하는 내용을 ""안에 자유롭게 구성하여 출력할 수 있게 해줍니다
		// 숫자와 문자가 조합된 출력도 가능합니다.
		//키보드가 허락하는 한 어떤 내용이든 구성하여 출력할 수 있습니다.
		System.out.printf("56 x 69=1234\n");
		
		// 컴퓨터 내부에서 사용되어지는 자료(data)는 수치자료와 문자(text)자료로 구분됩니다.
		// 흔히 문자자료는 ""나 ' '사이에 넣어서 표현하고, 숫자는 별도 표시없이 순수한 숫자로만 표시합니다
		//"abcd"-문자(String),'a'-문자(char),123-숫자(정수) 123.12숫자(실수)
		//잘못된 자료의 사용 : 123as , as456 따옴표도 없는데 문자숫자 섞인경우
		
		
		
		// 이스케이프 문자-% : 아직 출력의 내용으로 결정되지 않은 데이터의 "출력자리를 마련"하는 문자입니다.
		//출력될 내용의 자료형에 따라 %d:정수, %f:실수, %s : 문자열 등으로 표기합니다.
		//그리고 그자리에 출력될 내용은 ""가 끝난후 뒤에 컴마로 구분하고 써줍니다.
		System.out.printf("56 x 69 =%d\n" , 1234);
		// 간단한 연산을 컴퓨터에게 시키고 그 결과를 포함한 내용을 출력할 수 있습니다.
		System.out.printf("56 x 69 =%d\n" ,56*69);
		System.out.printf("56 x 69 =%s\n" ,"삼천팔백육십사");
		System.out.printf("56.5 x 69.3 =%f\n" ,56.5*69.3 );
		
		// %이스케이프 문자는 갯수에 상관없이 필요한 만큼 구성하여 사용이 가능합니다.
		System.out.printf("%d x %d =%d\n" , 23 , 87 , 23*87);
		// ""안의 %갯수와 순서대로 출력될 데이터를(,)컴마로 구분하여 나열하면 순서대로 매칭 출력됩니다.
		
		//System.out.printf("%d\n", 23.45); // 에러
		//System.out.printf("%f\n", 23); // 에러
		System.out.printf("%s\n", 23); // %s 는 모든 자료형을 수용하여 출력이 가능합니다.
		System.out.printf("%s\n", 23,123);
		//%d 정수, %s "문자" %c'문자' %f 실수
		//소수점이 있는 나눗셈의 결과출력
		System.out.printf("%f÷%f =%f\n",15.5, 4.7, 15.5/4.7 );
		// ÷ : 출력되기 위한 연산기호, 실제 연산과는 무관
		// / : 실제 연산을 위한 연산기호
		// 덧셈 : +, 뺄셈 : -, 곱셈 : *, 나눗셈 : /
		

		//소수점을 조절하여 출력하려면 아래와 같이 씁니다 : %.2f
		System.out.printf("%d÷%d = %.2f\n",27, 13, 27/13.0);
		//소수점 조절에  의해 자리수가 조절되고, 없어지는 곳은 반올림됩니다. - 위는 소수점 셋째자리에서 반올림
		
		//% 연산 - 나눗셈의 나머지 계산연산자
		System.out.printf("%d %% %d = %d\n", 19, 5, 19%5);
	}
	
}	
