package days02;

public class Print02 {

	public static void main(String[] args) {
		//printf 안에서 %와 s,f,d 사이에 숫자 옵션을 넣어서 표시할 자리수를 조절할 수 있습니다.
		
		//정수(%d)의 자리조절
		//%와 d 사이에 숫자를 안쓴경우 : 표시할 데이터의 자리수만큼만 확보한 후 출력합니다
		System.out.printf("정수%d정수\n", 1234);
		
		//%와 d 사이에 숫자를 쓴 경우 : 쓴 숫자 자리수만큼 확보한 후 출력합니다.\
		//만약 자리가 모자르다면 자동으로 필요한만큼 자리를 추가
		//만약 자리가 남는다면 남는자리는 공백으로 채웁니다.
		System.out.printf("정수%3d정수\n", 1234);
		System.out.printf("정수%10d정수\n", 12345);
		
		System.out.printf("정수%10d정수\n", 15);
		System.out.printf("정수%10d정수\n", 145);
		System.out.printf("정수%10d정수\n", 12345);
		// 충분한 자리와 1의 자리를 맞춰서(오른쪽 정렬) 출력하기 위해 같은 숫자 옵션을 지정하여
		// 사용하는게 보통입니다.
		
		//출력될 자리 확보 후 왼쪽정렬
		System.out.printf("정수%-10d정수\n\n", 12345);
		
		
		//문자출력 자리수 조절
		// 숫자를 안쓴경우 : 출력데이터 만큼 자리 확보
		System.out.printf("문자:%s꽃이 피었습니다\n","무궁화");
		// 숫자를 썼지만 자리가 모자른 경우 ; 필요한 만큼 자동으로 자리추가
		System.out.printf("문자:%2s꽃이 피었습니다\n", "무궁화");
		//숫자를 써서 자리가 남는 경우 : 공백으로 채움
		System.out.printf("문자:%10s꽃이 피었습니다\n","무궁화");
		//왼쪽정렬
		System.out.printf("문자:%-10s꽃이 피었습니다\n\n","무궁화");
		
		
		
		
		// 실수의 자리수 조절
		// 조절 숫자를 안쓴 경우 : 소수점 윗자리는 필요한 자릿수만큼 자동 확보, 소수점 아래는 6자리가 확보후 출력
		//                                   남는 소수점은 0으로 채웁니다
		System.out.printf("실수%f실수\n",123.123);
		
		//조절 숫자를 쓴 경우
		//%10.2f : 정수의 자리수와 소수점 아래 자리수를 한번에 표현한 예
		//               총 10자리 확보 후 소수점(.)을 위한 자리 한자리 소모, 소수점 아래자리를 위한 두자리 소모
		//               나머지 7자리를 정수를 위한 자리로 사용합니다.
		//               정수를 위한 자리에서 모자르거나 남으면 %d처럼 출력됩니다.
		//               소수점 아래 자리에서 모자르면 반올림해서 필요한 자리까지만 표시
		//              소수점 아래 자리에서 자리가 남으면 0으로 채웁니다.
		System.out.printf("실수%10.4f실수\n",123.12);  //소수점 아래 자리가 남는 경우
		System.out.printf("실수%3.1f실수\n",123.12);  //소수점 아래 자리가 모자른 경우
		System.out.printf("실수%.2f실수\n",123.1234); // 정수 부분 생략 
		System.out.printf("실수%-10.2f실수\n",123.1234); //왼쪽정렬 
		
	}

}
